This is where we'll have our change log. Remember to record what you do so you
can write it here!
0.001: Created the repo, worked on a number of things, including our plan, populate_block_cast_action and our level builder.
0.002: Worked on getting populate_block_cast_action and our level builder working, and wrote 0.001 in the changelog. - Jared
        Created the platformer folder for use in creating a combined version of the rfk and cycle projects. 
            I'm hoping to turn this into a version of rfk that uses scripting so that we can use it in the future for the rest of our project.

0.003: I continued working on turning this into a version of rfk that uses scripting.
        I wasn't very successful in this. 
        I temporarily moved the scripting files out of the main folder to essentially rewrite them with the basics of rfk, the functions from director.py.
        I started working on set_pc_velocity_action in scripting, who's rfk counterpart is the _get_inputs function in director.py, with the cycles counterpart of control_actors_action.py in scripting.
        I think I did some other stuff, but I can't remember what I did. 
        Currently the program is running.

0.004: We decided to ditch our idea of basing things off of RFK, and are switching to a new model based on Cycles with a side of RFK. Created references folder

0.005: Moved platformer and our previous Cycles program into references.

0.006: Imported a fresh copy of our Cycles game to use as a base for our new program.
        Jared wrote in the plan and changelog.
        Liam added the resources.py file to the shared folder.
        Liam removed some code from the second player.
        Kaelyn removed code from the scripting and services folders' files regarding the second player
        Liam worked on converting the player to use RFK movement rather than Cycles movement.

0.007: Liam continued working on converting the player to use RFK style movement.
        Jared changed a couple of items in the constants.py, some words in resources.py, and continued working in the plan and changelog.
        
0.008: L continues to suffer, but successfully made populate_block_cast_action function as working! 
        As coded as of writing, populate_block_cast_action works. It doesn't really do anything ingame, but it does pull from the level file and print as it works.
                To note- If you make a level, you need to add it's file extension name to the constants file. Feel free to change it if you want to, but trust me when I say, this was the simplest way of doing it. 

0.009: Watch in real time as you can move the player sprite around pixel by pixel! 
        The functionality is that of our old RFK file, and oh my goodness, I'm so happy I might cry. Never before have I been so happy to move around a black void as a single Q. Moving the character model is no longer involuntary, holding down the key lets you move. 

0.010: Jared - Worked on populate_block_cast_action a bunch, it's close to done I just need to finish it and troubleshoot it.

0.011: L- Worked on populate_block_cast_action, still not working as intended

0.012: Jared - Got the error to change to something else through a little bit of troubleshooting, but I still don't know what's going on. 
        I suspect that it's an error in the needed values for pyray.draw_text, but I specifically assigned all of those and I didn't see any change. 
        The error I'm getting is thus:
                File "c:\Users\Jared\OneDrive\3 BYUI 2021-2022\BYUI Semester 2, Python, CSE 210\Week 11\CSE-Final-Project\CycleToBePlatformer\game\services\video_service.py", line 54, in draw_actor
                pyray.draw_text(text, x, y, font_size, color)
                File "C:\Users\Jared\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pyray\__init__.py", line 76, in func
                result = a(*modified_args)
                TypeError: an integer is required

0.013: L- WE DID IT. populate_block_cast_action IS V 1.0. IT WORKS. It's not perfect, but it WORKS. 

0.014: L- Gravity funtions. It's fast, I think I screwed up the addition somehow, but boy does it goes down.

0.015: L- Moderately janky collision added! Requires refinement on the gravity end, but it works!

0.016: Jared - Okay, there's a lot going on in this update.
        So, I started changing some things that were already programmed because they weren't designed in a way that we could use other things with. 
        Gravity I changed from a system where it just straight up moves you to a system that modifies the velocity of the player.
                I also moved gravity to be in control_actors_action, because I felt like that was a better place for it than player.py.
                        In moving the location of our gravity Handle_gravity_action.py became obsolete, and will likely be deleted very soon.
        I changed the collision variable from one to 4, and I made them directional. This will allow us to better implement sideways and upwards collision in the future.
                In doing this, I also changed the way that collision was being handled to use specific, descriptive variables. 
        
        Currently, and this will be changed soon, but when you press left or right it adds to your momentum. I'll be setting a maximum momentum soon in the constants.
        
0.017: Jared - Another large update. This one more productive, but still a lot of small changed being made.
        I've been working largely on collision and movement. 
        I set a few max speeds in constants and hooked them up to control_actors_action.py to limit our speed. 
        I also set left and right to automatically bring you back to a stand still if you stop holding either of them down.
        I changed our collision variable to be "collision_variable" rather than "collision_boolean"
                The goal of this is to allow us to use numbers 1 through MAX_DIRECTION_SPEED to stop just on top of where the player would collide.  
                Then we can collide with walls, floors and ceilings from as far away as we'll be able to move in one step.
        I updated plan.txt as well, so what's on there should be accurate to what's been done and needs to be done.
        
0.018: Jared - Hopped on, checked what needs to be done, and started work on levels.

0.019: Jared - I worked on the level a little bit more, but mostly worked on collision.
        I'm running into some sort of problem with the collision that I'd like for someone to work on.
        Details are in plan.txt

0.020: Jared - I'm hopping on again to try and solve this problem. Liam worked on it for a little bit earlier, but didn't make enough progress to warrant pushing according to him.
        I rewrote the way collision was being handled in control_actors_action and handle_collisions_action, and it fixed the issue I was having.
        South collision now works.
                
0.021: Jared - Back at it again at krispy kreme *kicks sign* https://www.youtube.com/watch?v=ax27VgI-lVE [kek -L]
        I fixed a logic error in how gravity was being applied. It was adding velocity up to MAX_SPEED_SOUTH + 1 rather than just MAX_SPEED_SOUTH.
        I worked on cleaning up the code we're working with a bit, removing old code or stuff that won't be useful in the future.
        I started working on collision for each of the other directions too.
                I set up the code that we need for each of the other directions in control_actors_action I think.
                I also set up the code for west in handle_collisions_action, but it seems to be a bit buggy. 
                        I think I have a little bit of logic that's mixed up in all of that, that's allowing it to move past the point it should be stopping at, and then it's being dragged back. I think. :confused:

0.022: L- East collision added, and west is no longer buggy! Mild changes to the level. 

0.023: L- Completely unneeded things added, but they were things that were bugging me. You are now able to change the color of the levels in the .txt file. 
1.0: L- Level completed, north collision too. This is what we set out to do, minus the three levels, but we do not have the time for that. This is good enough, or at least, it's going to have to be. 